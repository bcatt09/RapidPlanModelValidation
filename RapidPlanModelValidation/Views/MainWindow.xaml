<Window
    x:Class="RapidPlanModelValidation.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:l="clr-namespace:RapidPlanModelValidation"
	xmlns:oxy="http://oxyplot.org/wpf"
    Title="KCI RapidPlan Model Validation Tool"
    Height="975" Width="800"
    WindowStartupLocation="CenterScreen"
    Loaded="MainWindow_OnLoaded"
    >

    <Window.Resources>
        <CollectionViewSource x:Key="Plans" Source="{Binding Plans}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="PlanId" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="CourseId" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <l:UnderscoreConverter x:Key="UnderscoreConverter" />
        <l:DVHDefaultTextVisibilityConverter x:Key="DVHDefaultTextVisibilityConverter" />
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding StartCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="400"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <DockPanel>
                <TextBlock
                    DockPanel.Dock="Top"
                    Text="Select a RapidPlan model to validate:"
                    />
                <ComboBox
                    DockPanel.Dock="Top"
                    x:Name="ModelComboBox"
                    ItemsSource="{Binding RapidPlanModels, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                    SelectedItem="{Binding SelectedRapidPlanModel, NotifyOnSourceUpdated=True}"
                    Margin="0,5,0,0"
                    >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SourceUpdated">
                            <i:InvokeCommandAction Command="{Binding OpenRapidPlanModelCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>                
                </ComboBox>
                <TextBlock
                    DockPanel.Dock="Top"
                    Text="Validation patients:"
                    Margin="0,5,0,0"
                    />
                <ListBox
                    DockPanel.Dock="Top"
                    ItemsSource="{Binding PatientsInModel}"
                    SelectedItem="{Binding SelectedPatientFromModel, NotifyOnSourceUpdated=True}"
                    Height="250"
                    Margin="0,5,0,0"
                    >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Run Text="{Binding LastName}" />, <Run Text="{Binding FirstName}" /> (<Run Text="{Binding ID}" />)
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SourceUpdated">
                            <i:InvokeCommandAction Command="{Binding SelectPatientCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <Button
                    DockPanel.Dock="Top"
                    Height="20"
                    Width="150"
                    Content="Validate Plans"
                    Margin="0,30,0,0"
                    Command="{Binding ValidatePlansCommand}"
                    />
                <Button
                    DockPanel.Dock="Top"
                    Height="20"
                    Width="150"
                    Content="View Warning Log"
                    Margin="0,5,0,0"
                    Command="{Binding ViewWarningLogCommand}"
                    Visibility="{Binding WarningLogButtonVisibility}"
                    />
                <TextBlock
                    />
            </DockPanel>

            <GridSplitter
                Grid.Column="1"
                HorizontalAlignment="Left"
                Background="Transparent"
                Width="5"
                />

            <DockPanel
                Grid.Column="1"
                Margin="5,0,0,0"
                >
                <TextBlock
                    DockPanel.Dock="Top"
                    Text="Dose metrics:"
                    Margin="0,0,0,5"
                    />
                <DataGrid
                    ItemsSource="{Binding MetricResults}"
                    IsReadOnly="True"
                    AutoGenerateColumns="False"
                    SelectedItem="{Binding SelectedMetric}"
                    >
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Header="Structure"
                            Binding="{Binding Structure, Converter={StaticResource UnderscoreConverter}}"
                            Width="*"/>
                        <DataGridTextColumn
                            Header="Metric"
                            Binding="{Binding Metric}"
                            Width="100"/>
                        <DataGridTextColumn
                            Header="Clinical Plan"
                            Binding="{Binding ClinPlanResult, StringFormat=\{0:f2\}}"
                            Width="90">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <!-- Align mean dose to the right (looks better) -->
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn
                            Header="RapidPlan Plan"
                            Binding="{Binding RapPlanResult, StringFormat=\{0:f2\}}"
                            Width="90">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <!-- Align mean dose to the right (looks better) -->
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn
                            Header="RapidPlan - Clinical"
                            Binding="{Binding Difference, StringFormat=\{0:f2\}}"
                            Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <!-- Align mean dose to the right (looks better) -->
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding MetricInfoCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </DockPanel>
        </Grid>
        <GridSplitter
                Grid.Row="1"
                VerticalAlignment="Top"
                Background="Transparent"
                Height="5"
                />
        <DockPanel Height="500"
                   Grid.Row="1"
                   Margin="5">
            <ItemsControl DockPanel.Dock="Bottom"
                          Name="StructureList" 
                          Margin="10,10,10,0"
                          ItemsSource="{Binding DVHStructures}" 
                          HorizontalAlignment="Center"
                          VerticalAlignment="Top"
                          MinHeight="75">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel ItemWidth="200" MaxWidth="600"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <CheckBox Name="CheckBoxes" Content="{Binding ModelID}" IsChecked="{Binding OnDVH, Mode=TwoWay}" Checked="Structure_OnChecked" Unchecked="Structure_OnUnchecked"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            </ItemsControl>
            <oxy:PlotView DockPanel.Dock="Bottom"
                          Name="DVHGraph" 
                          Model="{Binding DVHPlot}"
                          BorderBrush="DimGray" 
                          BorderThickness="2"
                          Background="DarkGray"
                          MinHeight="400" 
                          MinWidth="600"/>
        </DockPanel>
        <TextBlock Text="DVH Goes Here"
                   FontSize="25"
                   FontWeight="SemiBold"
                   Foreground="White"
                   Grid.Row="1"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Margin="0,0,0,75"
                   Visibility="{Binding DVHPlot, Converter={StaticResource DVHDefaultTextVisibilityConverter}}"/>
    </Grid>
</Window>
